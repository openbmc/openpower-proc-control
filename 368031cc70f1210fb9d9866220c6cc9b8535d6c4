{
  "comments": [
    {
      "key": {
        "uuid": "e4ea8caf_f3a21c80",
        "filename": "procedures/phal/enter_mpreboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-10-14T17:08:05Z",
      "side": 1,
      "message": "return in catch block , is it valid? first time seen such a thing, in this context looks ok though",
      "revId": "368031cc70f1210fb9d9866220c6cc9b8535d6c4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f597f2f_491fa5ee",
        "filename": "procedures/phal/enter_mpreboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2021-10-14T17:13:19Z",
      "side": 1,
      "message": "https://stackoverflow.com/questions/449099/is-it-bad-practice-to-return-from-within-a-try-catch-finally-block",
      "parentUuid": "e4ea8caf_f3a21c80",
      "revId": "368031cc70f1210fb9d9866220c6cc9b8535d6c4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2a37867_bdfebf18",
        "filename": "procedures/phal/enter_mpreboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-10-15T02:07:03Z",
      "side": 1,
      "message": "yes looks valid.\n\nOther than by throwing or rethrowing the exception, the catch-clause after a regular try block (not function-try-block) may be exited with a return, continue, break, goto, or by reaching the end of its compound-statement. In any case, this destroys the exception object (unless an instance of std::exception_ptr exists that refers to it).\n\nhttps://en.cppreference.com/w/cpp/language/try_catch",
      "parentUuid": "7f597f2f_491fa5ee",
      "revId": "368031cc70f1210fb9d9866220c6cc9b8535d6c4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}