{
  "comments": [
    {
      "key": {
        "uuid": "72c60c24_0092c035",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 5
      },
      "lineNbr": 286,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2021-12-11T03:55:58Z",
      "side": 1,
      "message": "Not all IPL_ERR_ATTR_READ_FAIL and IPL_ERR_ATTR_WRITE failures needed the plat specific error handling . This is genric error used in IPL. Prefer to call  processPlatBootError only for error type is plat/specific errors. \n\nSince you already passing hwp structure  from ipl , Add the these resoncode info in special reason codes in HWP_ErrorInfo structure  and alway\u0027s return IPL_ERR_PLAT from ipl incase special processing required.\n\nstruc HWP_ErrorInfo\n{\n    // To get hwp return code which is defined in error xml for\n    // each error\n    std::string rc;\n\n    // To get return code desciption\n    std::string rc_desc;. \n}",
      "revId": "0cd531bb744a62f7a4d80eb40c5e37898614ebcf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c28b3871_2739ef86",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 5
      },
      "lineNbr": 306,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-10T14:34:27Z",
      "side": 1,
      "message": "I think it is just \"out\" param - looks you are not looking for anything from that parameter.",
      "range": {
        "startLine": 306,
        "startChar": 10,
        "endLine": 306,
        "endChar": 12
      },
      "revId": "0cd531bb744a62f7a4d80eb40c5e37898614ebcf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b056d617_f49b4ab2",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 5
      },
      "lineNbr": 306,
      "author": {
        "id": 1000567
      },
      "writtenOn": "2021-12-10T15:08:30Z",
      "side": 1,
      "message": "this function is appending data to existing list. i think we should use [in,out].\nif it is only [out], which means this function not guaranteeing to preserve the incoming data.",
      "parentUuid": "c28b3871_2739ef86",
      "range": {
        "startLine": 306,
        "startChar": 10,
        "endLine": 306,
        "endChar": 12
      },
      "revId": "0cd531bb744a62f7a4d80eb40c5e37898614ebcf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a49578da_9379055d",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 5
      },
      "lineNbr": 306,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-13T02:48:41Z",
      "side": 1,
      "message": "If you are thinking, this function is not going to guarntee the modification of the given input data which already exists in the list then, IMO we are not defining the right responsibility for this function. \n\nI would do differently...\n\n```\njson planarCalloutData;\njsonCalloutDataList.emplace_back(planarCalloutData);\n\naddPlanarCallout(jsonCalloutDataList.back());\n\nstatic void addPlanarCalloutDetails(nlohmann::json\u0026 planarCalloutData)\n{\n    ...\n}\n```\n\nBut currently, you are not modifiying anything in this function of the given list (just adding extra element) and I will leave it to you since it is just a documentation comment no functional comment.",
      "parentUuid": "b056d617_f49b4ab2",
      "range": {
        "startLine": 306,
        "startChar": 10,
        "endLine": 306,
        "endChar": 12
      },
      "revId": "0cd531bb744a62f7a4d80eb40c5e37898614ebcf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5281cece_9fdb43ed",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 5
      },
      "lineNbr": 308,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-10T14:34:27Z",
      "side": 1,
      "message": "Looks extra space please remove it.",
      "range": {
        "startLine": 308,
        "startChar": 13,
        "endLine": 308,
        "endChar": 17
      },
      "revId": "0cd531bb744a62f7a4d80eb40c5e37898614ebcf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c66cd672_4467627b",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 5
      },
      "lineNbr": 313,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-10T14:34:27Z",
      "side": 1,
      "message": "JS: Do we need this trace? we can see it from the PEL.\n\nIf you think it is needed then, just change it to \"Callout the motherboard [{\"inventory path\"}]\" in the trace so that we can use it for any type of error.",
      "revId": "0cd531bb744a62f7a4d80eb40c5e37898614ebcf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a38a6e44_26fa0e8a",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 5
      },
      "lineNbr": 327,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2021-12-11T03:55:58Z",
      "side": 1,
      "message": "Looks not correct , need to have better way to do this . Hwp error\u0027s reported by plat function  already have special reason code. I think you are trying to handle i2C errors here. that is non-hwp errors right?\nIf you add proper RC description that will fix this requirement , no additional chnage required.",
      "range": {
        "startLine": 327,
        "startChar": 59,
        "endLine": 327,
        "endChar": 70
      },
      "revId": "0cd531bb744a62f7a4d80eb40c5e37898614ebcf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "399badde_f1e6ce6e",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 5
      },
      "lineNbr": 388,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-10T14:34:27Z",
      "side": 1,
      "message": "You could use \"!empty()\" instead of size() from vector class.",
      "range": {
        "startLine": 388,
        "startChar": 57,
        "endLine": 388,
        "endChar": 61
      },
      "revId": "0cd531bb744a62f7a4d80eb40c5e37898614ebcf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0287ea84_38cbd333",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 5
      },
      "lineNbr": 388,
      "author": {
        "id": 1000567
      },
      "writtenOn": "2021-12-10T15:08:30Z",
      "side": 1,
      "message": "is there any benifit of using it?",
      "parentUuid": "399badde_f1e6ce6e",
      "range": {
        "startLine": 388,
        "startChar": 57,
        "endLine": 388,
        "endChar": 61
      },
      "revId": "0cd531bb744a62f7a4d80eb40c5e37898614ebcf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9628f9d_e051e6f1",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 5
      },
      "lineNbr": 388,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-13T02:48:41Z",
      "side": 1,
      "message": "Yes, \n- empty() is implemented in constant time regardless of the container type i.e O(1).\n- More readability.",
      "parentUuid": "0287ea84_38cbd333",
      "range": {
        "startLine": 388,
        "startChar": 57,
        "endLine": 388,
        "endChar": 61
      },
      "revId": "0cd531bb744a62f7a4d80eb40c5e37898614ebcf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}