{
  "comments": [
    {
      "key": {
        "uuid": "c48c873c_b0fe99a8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-02T15:25:52Z",
      "side": 1,
      "message": "is it only for the non hardware procedure clock error handling?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 36
      },
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c16242b_96c076b0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-02T15:25:52Z",
      "side": 1,
      "message": "Include \"PHAL: \" as prefix.\n\nWe are following that rule for phal specific code.",
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa4e2521_02bfa7c5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-02T15:25:52Z",
      "side": 1,
      "message": "Looks commit message is not accurate as per the latest patch. Please update",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 63
      },
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb78fb9f_2fca77f3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-02T15:25:52Z",
      "side": 1,
      "message": "Tested:?\nFYR:https://github.com/openbmc/docs/blob/master/CONTRIBUTING.md#testing",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 5
      },
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4bdacb7_7ff5f5ca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-02T15:25:52Z",
      "side": 1,
      "message": "Where these is coming? I am not seeing the related code for this.",
      "range": {
        "startLine": 56,
        "startChar": 4,
        "endLine": 57,
        "endChar": 27
      },
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c88d93f_715c0c89",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1000567
      },
      "writtenOn": "2021-12-02T16:02:36Z",
      "side": 1,
      "message": "this is added as an ffdc_data in the structure returned from libipl\n\nhttps://github.com/open-power/ipl/pull/22/files#diff-bd1ae5c8cc48843ac940e530861e80fd41620c108e1c19437eb39d825a3953d4R431",
      "parentUuid": "e4bdacb7_7ff5f5ca",
      "range": {
        "startLine": 56,
        "startChar": 4,
        "endLine": 57,
        "endChar": 27
      },
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ff35197_61fa34a0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-03T04:14:23Z",
      "side": 1,
      "message": "So, this is coming from the plat layer, right? The prefix `HWP_` will give confusion, right? can we change it to `PLAT_` i.e can we add that prefix based on the error code.",
      "parentUuid": "5c88d93f_715c0c89",
      "range": {
        "startLine": 56,
        "startChar": 4,
        "endLine": 57,
        "endChar": 27
      },
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e428d79_717cb245",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-02T15:25:52Z",
      "side": 1,
      "message": "Why RC is some different value? is it the correct one?\nand RC_DESC is missing?",
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03ea0db7_3022ab10",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 1000567
      },
      "writtenOn": "2021-12-02T16:02:36Z",
      "side": 1,
      "message": "this rc indicates fapi2::FAPI2_RC_PLAT_ERR_SEE_DATA",
      "parentUuid": "3e428d79_717cb245",
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e6d3963_b90703a0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-03T04:14:23Z",
      "side": 1,
      "message": "Can you change it to a human-readable format? as like we did today for other RC with RC_DESC?\nIMO, some numeric values won\u0027t help us while debugging by using the PEL, and also, no traces in this case.",
      "parentUuid": "03ea0db7_3022ab10",
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36c05cd5_ff9020db",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 4
      },
      "lineNbr": 308,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-02T15:25:52Z",
      "side": 1,
      "message": "addPlanarCallout?\n\ncan you add documentation for this function?",
      "range": {
        "startLine": 308,
        "startChar": 12,
        "endLine": 308,
        "endChar": 41
      },
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee7b51c1_3dde46cf",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 4
      },
      "lineNbr": 317,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-02T15:25:52Z",
      "side": 1,
      "message": "is it needed to get based on `xyz.openbmc_project.Inventory.Item.Board.Motherboard` instead of hard code?",
      "range": {
        "startLine": 317,
        "startChar": 9,
        "endLine": 317,
        "endChar": 66
      },
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8fbd342_c3aec2cf",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 4
      },
      "lineNbr": 384,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-02T15:25:52Z",
      "side": 1,
      "message": "CALLOUT_PLANAR?",
      "range": {
        "startLine": 384,
        "startChar": 66,
        "endLine": 384,
        "endChar": 75
      },
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "157be34b_182a9193",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 4
      },
      "lineNbr": 385,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-02T15:25:52Z",
      "side": 1,
      "message": "Do you think adding like LN434 will give more readable than 0/1?",
      "range": {
        "startLine": 385,
        "startChar": 29,
        "endLine": 385,
        "endChar": 70
      },
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3e1bf4e_f91d0826",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 4
      },
      "lineNbr": 390,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-02T15:25:52Z",
      "side": 1,
      "message": "What will happen for other error cases?\n\nIf HwCallout is added without a planar callout request from the PHAL layer means, is it will break? \n\nLooks like you removed the old code which will callout the target by using the phal device tree so please include other error case test details in the commit message.",
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8543331f_e87c3c7c",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 4
      },
      "lineNbr": 390,
      "author": {
        "id": 1000567
      },
      "writtenOn": "2021-12-02T16:02:36Z",
      "side": 1,
      "message": "As per my understanding, hwcallout indicates we have to callout something other than FAPI targets.\nTarget passed inside this is, reference target which can be used to find the actual callout.\nSo, for other target type, (if it need to be supported), we may have to write custome code for each hw type.\n\nI think callingout the reference target is not correct.",
      "parentUuid": "e3e1bf4e_f91d0826",
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8986f333_06a475fa",
        "filename": "extensions/phal/phal_error.cpp",
        "patchSetId": 4
      },
      "lineNbr": 390,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-12-03T04:14:23Z",
      "side": 1,
      "message": "\u003e hwcallout indicates we have to call out something other than FAPI targets.\n\nWhat you mean by \"something other than FAPI targets.\"? Non-FAPI (aka plat-specific targets)?\n\nI am a bit concerned about the case where the reference target (FAPI and Non-FAPI target, respective FRU Location code will be identified by openpower::phal::pdbg::getLocationCode())) is available in the device tree and that is different than the CDG (Callout/Deconfigure/Guard) target means, we will lose that case to handle, right? The current code will support that, right? \n\nIf you are looking for the clock error alone to handle based on the reference target then, that should decide by the PHAL layer as you did `hwCallout.isPlanarCallout` i.e you should not add the reference target in the plat layer if you want to callout the planer instead of the reference target since you indicated by the `isPlanarCallout`, right?\n\nI think we could do like below\n\n```\nif (hwCallout.isPlanarCallout)\n{\n   calloutPlanar();\n   // comments to why continue to other targets\n   // Note, We should not continue if we want to callout the planar along with reference target (different than planar)\n   continue;\n}\n```\n\n\nand noted, reference target and CDG target are the same in the https://github.com/open-power/pub-ekb/blob/main-p10/chips/p10/procedures/xml/error_info/p10_clock_test_errors.xml#L53? Do you know why? I think we will callout the same target twice.",
      "parentUuid": "8543331f_e87c3c7c",
      "revId": "d312c5cdefdb76d5de8787636cbe1bbf602ab966",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}